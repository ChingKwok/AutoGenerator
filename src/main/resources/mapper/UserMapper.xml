<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chingkwok.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.chingkwok.bean.entity.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="last_modifier_user_id" jdbcType="BIGINT" property="lastModifierUserId" />
    <result column="last_modification_time" jdbcType="TIMESTAMP" property="lastModificationTime" />
    <result column="creator_user_name" jdbcType="VARCHAR" property="creatorUserName" />
    <result column="creator_user_id" jdbcType="BIGINT" property="creatorUserId" />
    <result column="creation_time" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="deletion_time" jdbcType="TIMESTAMP" property="deletionTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="deleter_user_id" jdbcType="BIGINT" property="deleterUserId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, nickname, username, password, mobile, salt, email, last_modifier_user_id, 
    last_modification_time, creator_user_name, creator_user_id, creation_time, deletion_time, 
    is_deleted, deleter_user_id
  </sql>
  <select id="selectByExample" parameterType="com.chingkwok.bean.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chingkwok.bean.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chingkwok.bean.entity.User">
    insert into user (user_id, nickname, username, 
      password, mobile, salt, 
      email, last_modifier_user_id, last_modification_time, 
      creator_user_name, creator_user_id, creation_time, 
      deletion_time, is_deleted, deleter_user_id
      )
    values (#{userId,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{lastModifierUserId,jdbcType=BIGINT}, #{lastModificationTime,jdbcType=TIMESTAMP}, 
      #{creatorUserName,jdbcType=VARCHAR}, #{creatorUserId,jdbcType=BIGINT}, #{creationTime,jdbcType=TIMESTAMP}, 
      #{deletionTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}, #{deleterUserId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chingkwok.bean.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="lastModifierUserId != null">
        last_modifier_user_id,
      </if>
      <if test="lastModificationTime != null">
        last_modification_time,
      </if>
      <if test="creatorUserName != null">
        creator_user_name,
      </if>
      <if test="creatorUserId != null">
        creator_user_id,
      </if>
      <if test="creationTime != null">
        creation_time,
      </if>
      <if test="deletionTime != null">
        deletion_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="deleterUserId != null">
        deleter_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="lastModifierUserId != null">
        #{lastModifierUserId,jdbcType=BIGINT},
      </if>
      <if test="lastModificationTime != null">
        #{lastModificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorUserName != null">
        #{creatorUserName,jdbcType=VARCHAR},
      </if>
      <if test="creatorUserId != null">
        #{creatorUserId,jdbcType=BIGINT},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletionTime != null">
        #{deletionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="deleterUserId != null">
        #{deleterUserId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chingkwok.bean.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModifierUserId != null">
        last_modifier_user_id = #{record.lastModifierUserId,jdbcType=BIGINT},
      </if>
      <if test="record.lastModificationTime != null">
        last_modification_time = #{record.lastModificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorUserName != null">
        creator_user_name = #{record.creatorUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorUserId != null">
        creator_user_id = #{record.creatorUserId,jdbcType=BIGINT},
      </if>
      <if test="record.creationTime != null">
        creation_time = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deletionTime != null">
        deletion_time = #{record.deletionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.deleterUserId != null">
        deleter_user_id = #{record.deleterUserId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=BIGINT},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      last_modifier_user_id = #{record.lastModifierUserId,jdbcType=BIGINT},
      last_modification_time = #{record.lastModificationTime,jdbcType=TIMESTAMP},
      creator_user_name = #{record.creatorUserName,jdbcType=VARCHAR},
      creator_user_id = #{record.creatorUserId,jdbcType=BIGINT},
      creation_time = #{record.creationTime,jdbcType=TIMESTAMP},
      deletion_time = #{record.deletionTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      deleter_user_id = #{record.deleterUserId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chingkwok.bean.entity.User">
    update user
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="lastModifierUserId != null">
        last_modifier_user_id = #{lastModifierUserId,jdbcType=BIGINT},
      </if>
      <if test="lastModificationTime != null">
        last_modification_time = #{lastModificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorUserName != null">
        creator_user_name = #{creatorUserName,jdbcType=VARCHAR},
      </if>
      <if test="creatorUserId != null">
        creator_user_id = #{creatorUserId,jdbcType=BIGINT},
      </if>
      <if test="creationTime != null">
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletionTime != null">
        deletion_time = #{deletionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="deleterUserId != null">
        deleter_user_id = #{deleterUserId,jdbcType=BIGINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chingkwok.bean.entity.User">
    update user
    set nickname = #{nickname,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      last_modifier_user_id = #{lastModifierUserId,jdbcType=BIGINT},
      last_modification_time = #{lastModificationTime,jdbcType=TIMESTAMP},
      creator_user_name = #{creatorUserName,jdbcType=VARCHAR},
      creator_user_id = #{creatorUserId,jdbcType=BIGINT},
      creation_time = #{creationTime,jdbcType=TIMESTAMP},
      deletion_time = #{deletionTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      deleter_user_id = #{deleterUserId,jdbcType=BIGINT}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>